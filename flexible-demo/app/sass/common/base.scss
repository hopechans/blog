/**
  混合宏,px转rem
 */
@mixin px2rem($property,$px-values,$baseline-px:75px,$support-for-ie:false){
  //Conver the baseline into rems
  $baseline-rem: $baseline-px / 1rem * 1;
  //Print the first line in pixel values
  @if $support-for-ie {
    #{$property}: $px-values;
  }
  //if there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number"{
    #{$property}: $px-values / $baseline-rem;
  }
  @else {
    //Create an empty list that we can dump values into
    $rem-values:();
    @each $value in $px-values{
      // If the value is zero or not a number, return it
      @if $value == 0 or type-of($value) != "number"{
        $rem-values: append($rem-values, $value / $baseline-rem);
      }
    }
    // Return the property and its list of converted values
    #{$property}: $rem-values;
  }
}


/**
  混合宏,字体不应该用rem，因为可能会出现13,15的px
 */
@mixin font-dpr($font-size) {
  font-size: $font-size;

  [data-dpr="2"] & {
    font-size: $font-size * 2;
  }

  [data-dpr="3"] & {
    font-size: $font-size * 3;
  }
}

/**
  1px问题，二倍图问题，也可以用混合宏解决
 */

@mixin borderFix($color){
  position: relative;
  &::before{
     display:block;
    position:absolute;
    left:0;
    top:0;
    width:100%;
    border:1px solid $color;
    content:'';
    }
}

@mixin border1px($color) {

  [data-dpr="2"] & {
    .borderFix {
      &::before {
        -webkit-transform: scaleY(0.5);
        transform: scaleY(0.5);
      }
    }
  }
  [data-dpr="3"] & {
    .borderFix {
      &::before {
        -webkit-transform: scaleY(0.33333334);
        transform: scaleY(0.33333334);
      }
    }
  }
}